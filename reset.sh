#!/bin/sh
set -eu

# Volumes cache c·∫ßn xo√° (kh√¥ng g·ªìm dbdata)
CACHE_VOLUMES="vendor node_modules composer-cache npm-cache storage"

# Nh·∫≠n project name: ∆∞u ti√™n COMPOSE_PROJECT_NAME; fallback = t√™n th∆∞ m·ª•c hi·ªán t·∫°i
PROJECT="${COMPOSE_PROJECT_NAME:-$(basename "$PWD")}"

CONFIRM=1
WIPE_DB=0

for arg in "$@"; do
  case "$arg" in
    --yes|-y) CONFIRM=0 ;;
    --all|-a) WIPE_DB=1 ;;
    --help|-h)
      echo "Usage: $0 [--yes|-y] [--all|-a]"
      echo "  --yes   : kh√¥ng h·ªèi x√°c nh·∫≠n"
      echo "  --all   : x√≥a lu√¥n DB volume (dbdata)"
      exit 0
      ;;
  esac
done

echo "üîª Stopping containers (no volume removal yet)..."
docker compose down --remove-orphans || true

# Danh s√°ch volume ƒë·∫ßy ƒë·ªß (gh√©p prefix <project>_ )
VLIST=""
for v in $CACHE_VOLUMES; do
  VLIST="$VLIST ${PROJECT}_${v}"
done

if [ "$WIPE_DB" -eq 1 ]; then
  VLIST="$VLIST ${PROJECT}_dbdata"
fi

echo "üì¶ Volumes s·∫Ω xo√°:"
for v in $VLIST; do
  echo "  - $v"
done

if [ "$CONFIRM" -eq 1 ]; then
  echo -n "‚ùì X√°c nh·∫≠n xo√° c√°c volumes tr√™n? [y/N] "
  read ans
  case "${ans:-N}" in
    y|Y) ;;
    *) echo "‚ùé B·ªè qua."; exit 0 ;;
  esac
fi

echo "üóë  Removing selected volumes..."
for v in $VLIST; do
  docker volume rm "$v" 2>/dev/null && echo "  ‚úÖ $v" || echo "  ‚ö†Ô∏è  $v (kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒëang d√πng)"
done

echo "üöÄ Done. B·∫°n c√≥ th·ªÉ ch·∫°y l·∫°i:"
echo "    docker compose up -d"
